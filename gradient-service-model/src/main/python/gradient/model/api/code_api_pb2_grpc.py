# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from src.main.python.gradient.model.api import code_entity_pb2 as code__entity__pb2


class CodeServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.AnalyzeProgram = channel.unary_unary(
            '/org.sourceflow.gradient.code.CodeService/AnalyzeProgram',
            request_serializer=code__entity__pb2.CodeMessage.SerializeToString,
            response_deserializer=code__entity__pb2.CodeMessage.FromString,
        )


class CodeServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def AnalyzeProgram(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'AnalyzeProgram': grpc.unary_unary_rpc_method_handler(
            servicer.AnalyzeProgram,
            request_deserializer=code__entity__pb2.CodeMessage.FromString,
            response_serializer=code__entity__pb2.CodeMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'org.sourceflow.gradient.code.CodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
